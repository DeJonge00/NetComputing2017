package task_manager;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Task extends Thread {
	private Process process;
	private String output;
	private boolean isFInished;
	
	public Task(Process p) {
		this.process = p;
		this.output = "Not Finished";
		this.isFInished = false;
	}
	
	public void run() {
		try {
			process.waitFor();
		} catch (InterruptedException e) {
			System.out.println("Process was interrupted: " + process.toString());
			return;
		}
		System.out.println("Process finished executing: " + process.toString());
		
		BufferedReader in = getInputStream();
		this.output = readTaskOutput(in);
	}
	
	public synchronized void getOutput() {
		if(this.isFinished) {
			return this.output;
		}
	}
	
	private BufferedReader getInputStream() {
		return new BufferedReader(new InputStreamReader(process.getInputStream()));
	}
	
	private String readTaskOutput(BufferedReader in) {
		StringBuffer sb = new StringBuffer();
		
		String line;
		try {
			while((line = in.readLine()) != null) {
				sb.append(line);
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		return sb.toString();
			
	}
}
