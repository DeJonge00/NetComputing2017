package task_manager;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Observable;

public class TaskThread extends Observable implements Runnable {
	private Process process;
	private TaskOutput out;

	private Thread t;
	
	public TaskThread(Process p, TaskOutput out) {
		this.process = p;
		this.out = out;
	}
	
	public void run() {
		try {
			process.waitFor();
			BufferedReader in = getInputStream();
			String output = readTaskOutput(in);
			notifyObservers();
			//System.out.println("Process finished executing: " + output);
		
		} catch (InterruptedException e) {
			System.out.println("Process was interrupted: " + process.toString());
			return;
		}
	
		
		}
	
	
	private BufferedReader getInputStream() {
		return new BufferedReader(new InputStreamReader(process.getInputStream()));
	}
	
	private String readTaskOutput(BufferedReader in) {
		StringBuffer sb = new StringBuffer();
		
		String line;
		try {
			while((line = in.readLine()) != null) {
				sb.append(line + "\n");
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		return sb.toString();
			
	}
}
